
name: publish

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: temurin

      - name: Cache Maven Packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}}
          restore-keys: ${{ runner.os }}-maven



      - name: Build the app
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          MONGO_DB: ${{ secrets.MONGO_DB }}
          JWT_SECRETS: ${{ secrets.JWT_SECRETS }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        run: mvn package -DskipTests


  dockerize:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/notes-management-system .

      - name: Login to dockerhub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/notes-management-system

  deploy:
    runs-on: ubuntu-latest
    needs: dockerize

    steps:
      - name: Deploy to Render
        run: |
          curl -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{"clearCache":false}'
        

